swagger: "2.0"
info:
  version: 1.0.0
  title: Shared Agenda Application
host: sharedagendaapp.herokuapp.com
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  createAccount:
    post:
      operationId: createAccount
      tags:
        - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/CreateAccountRequest.yaml'
      responses:
        "201":
          description: Created
          schema:
            $ref: '../Backend/schema/src/yaml/responses/CreateAccountResponse.yaml'
        "400":
          description: "Invalid Parameter: accountId and nickname cannot be null or empty"
        "404":
          description: "Conflict: accountId already exist"
  getAccount:
    post:
      operationId: getAccount
      tags:
        - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/GetAccountRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/GetAccountResponse.yaml'
        "400":
          description: "Invalid Parameter: accountId cannot be null or empty"
        "404":
          description: "Not Found: target accountId not found in database"
  updateAccount:
    post:
      operationId: updateAccount
      tags:
        - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/UpdateAccountRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/UpdateAccountResponse.yaml'
        "400":
          description: "Invalid Parameter: accountId and nickname cannot be null or empty"
        "404":
          description: "Not Found: target accountId not found in database"
  getCalendarEventList:
    post:
      operationId: getCalendarEventList
      tags:
        - Calendars
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/GetCalendarEventListRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/GetCalendarEventListResponse.yaml'
        "400":
          description: "Invalid Parameter: calendarId cannot be null or empty"
        "404":
          description: "Not Found: calendar corresponding to calendarId not found in database"
  createEvent:
    post:
      operationId: createEvent
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/CreateEventRequest.yaml'
      responses:
        "201":
          description: CREATE
          schema:
            $ref: '../Backend/schema/src/yaml/responses/CreateEventResponse.yaml'
        "400":
          description: "Invalid Parameter: starterId, eventname and type cannot be null or empty"
        "404":
          description: "Not Found: starterId not found in database"
  getEventListByName:
    post:
      operationId: getEventListByName
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/GetEventListByNameRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/GetEventListByNameResponse.yaml'
        "400":
          description: "Invalid Parameter: eventname cannot be null or empty"
  updateEvent:
    post:
      operationId: updateEvent
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/UpdateEventRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/UpdateEventResponse.yaml'
        "400":
          description: "Invalid Parameter: eventId, eventname, starterId, and type cannot be null or empty"
        "404":
          description: "Not Found: target EventId not found in database"
  deleteEvent:
    post:
      operationId: deleteEvent
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/DeleteEventRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/DeleteEventResponse.yaml'
        "400":
          description: "Invalid Parameter: eventId and accountId cannot be null or empty"
        "404":
          description: "Not Found: target eventId or accountId not found in database"
  joinEvent:
    post:
      operationId: joinEvent
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/JoinEventRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/JoinEventResponse.yaml'
        "400":
          description: "Invalid Parameter: eventId, accountId cannot be null or empty, public need be true"
        "404":
          description: "Not Found: target eventId or accountId not found in database"
  cancelEvent:
    post:
      operationId: cancelEvent
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/CancelEventRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/CancelEventResponse.yaml'
        "400":
          description: "Invalid Parameter: eventId, accountId cannot be null or empty, accountId need be the starterId"
        "404":
          description: "Not Found: target eventId or accountId not found in database"
  inviteEvent:
    post:
      operationId: inviteEvent
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/InviteEventRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/InviteEventResponse.yaml'
        "400":
          description: "Invalid Parameter: senderId, receiverId and event cannot be null or empty, senderId need equal to starterId"
        "404":
          description: "Not Found: target senderId or receiverId not found in database"
# MessageQueue
  getMessageQueue:
    post:
      operationId: getMessageQueue
      tags:
        - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/GetMessageQueueRequest.yaml'
      responses:
        "200":
          description: OK
          schema:
            $ref: '../Backend/schema/src/yaml/responses/GetMessageQueueResponse.yaml'
        "400":
          description: "Invalid Parameter: messageQueueId cannot be null or empty"
        "404":
          description: "Not Found: target messageQueueId not found in database"
# Group
  createGroup:
    post:
      operationId: createGroup
      tags:
        - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/CreateGroupRequest.yaml'
      responses:
        "201":
          description: Created
          schema:
            $ref: '../Backend/schema/src/yaml/responses/CreateGroupResponse.yaml'
        "400":
          description: "Invalid Parameter: name, memberids and ownerid cannot be null or empty"
        "404":
          description: "Not Found: memberids or ownerid do not exist"
  group/addMember:
    post:
      operationId: group/addMember
      tags:
        - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/AddGroupMemberRequest.yaml'
      responses:
        "200":
          description: Ok
          schema:
            $ref: '../Backend/schema/src/yaml/responses/AddGroupMemberResponse.yaml'
        "400":
          description: "Invalid Parameter: groupid and memberids cannot be null or empty"
        "404":
          description: "Not Found: memberids or groupid do not exist"
  group/removeMember:
    post:
      operationId: group/removeMember
      tags:
        - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/RemoveGroupMemberRequest.yaml'
      responses:
        "200":
          description: Ok
          schema:
            $ref: '../Backend/schema/src/yaml/responses/RemoveGroupMemberResponse.yaml'
        "400":
          description: "Invalid Parameter: groupid and memberids cannot be null or empty"
        "404":
          description: "Not Found: memberids or groupid do not exist"
  GetGroup:
    post:
      operationId: getGroup
      tags:
        - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '../Backend/schema/src/yaml/requests/GetGroupRequest.yaml'
      responses:
        "200":
          description: Ok
          schema:
            $ref: '../Backend/schema/src/yaml/responses/GetGroupResponse.yaml'
        "400":
          description: "Invalid Parameter: groupid cannot be null or empty"
        "404":
          description: "Not Found: groupid do not exist"